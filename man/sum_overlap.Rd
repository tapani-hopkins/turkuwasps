% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interval.R
\name{sum_overlap}
\alias{sum_overlap}
\title{Get sum of how much intervals overlap}
\usage{
sum_overlap(x, y, proportional = TRUE)
}
\arguments{
\item{x}{Vector of intervals. To be overlapped with each interval of \code{y}.}

\item{y}{Vector of intervals that \code{x} overlap with.}

\item{proportional}{If FALSE, return the total overlap with each item of \code{y} in seconds. If TRUE (the default), return the total overlap as a proportion of the length of the intervals in \code{x}. (e.g. if half of an interval in \code{x} overlaps, add 0.5 to the sum)}
}
\value{
Numeric vector of same length as \code{y}. Gives the sum of overlap either in seconds (proportional=FALSE), or as proportion of \code{x}.
}
\description{
Find out how much a vector of interval objects overlaps with another. For each interval of the second vector, counts the sum of overlaps with the intervals of the first vector.
}
\examples{

# save a one-day interval into `i`
i = as.interval(s="2000-01-01 00:00:00 UTC+00:00", e="2000-01-02 00:00:00 UTC+00:00")

# save four identical intervals in `x`
x = c(i, i, i, i)

# save the interval, and the interval + 12 hours, in `y`
y = c(i, i+12*3600)

# proportional overlap of `x` with `y` 
# (gives 4 for y[1] = all four days in `x` overlapped entirely)
# (gives 2 for y[2] = all four days in `x` overlapped by half)
sum_overlap(x, y)

# overlap (in seconds) of `x` with `y`
# (gives 4*24 hours for y[1]) 
# (gives 4*12 hours for y[2])
sum_overlap(x, y)

}
